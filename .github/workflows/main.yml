name: TREE8 GLOBAL CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend-pipeline:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Lint Check
      run: npm run lint || true
    
    - name: Type Check
      run: npm run type-check || true
    
    - name: Run Tests
      run: npm test || true
    
    - name: Build
      run: npm run build
    
    - name: Upload Frontend Artifact
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/dist

  backend-pipeline:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Lint Check
      run: npm run lint || true
    
    - name: Run Tests
      run: npm test || true
    
    - name: Upload Backend Artifact
      uses: actions/upload-artifact@v3
      with:
        name: backend-build
        path: backend/dist

  security-scan:
    runs-on: ubuntu-latest
    needs: [frontend-pipeline, backend-pipeline]
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Security Scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [security-scan]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Frontend Artifact
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: frontend/dist
    
    - name: Download Backend Artifact
      uses: actions/download-artifact@v3
      with:
        name: backend-build
        path: backend/dist
    
    - name: Deploy to Staging
      run: |
        echo "Deploy to staging environment"
        # Add your staging deployment commands here

  deploy-production:
    runs-on: ubuntu-latest
    needs: [security-scan]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Frontend Artifact
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: frontend/dist
    
    - name: Download Backend Artifact
      uses: actions/download-artifact@v3
      with:
        name: backend-build
        path: backend/dist
    
    - name: Deploy to Production
      run: |
        echo "Deploy to production environment"
        # Add your production deployment commands here
